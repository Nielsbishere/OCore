#pragma once

#include <Template/Enum.h>
#include "API/OpenGL.h"

#undef RGB

namespace oi {

	namespace gc {

		DEnum(OpenGLTextureFormat, u32,
			Undefined = 0,
			R = GL_RED, RG = GL_RG, RGB = GL_RGB, RGBA = GL_RGBA,
			Ri = GL_RED_INTEGER, RGi = GL_RG_INTEGER, RGBi = GL_RGB_INTEGER, RGBAi = GL_RGBA_INTEGER,
			Depth = GL_DEPTH_COMPONENT, DepthStencil = GL_DEPTH_STENCIL, Stencil = GL_STENCIL_INDEX
		);

		DEnum(OpenGLTextureLayout, u32,
			Undefined = 0,

			R = GL_R8, Rs = GL_R8_SNORM, R16 = GL_R16, R16s = GL_R16_SNORM, R16f = GL_R16F, R32f = GL_R32F, Rc = GL_COMPRESSED_RED_RGTC1,
			RG = GL_RG8, RGs = GL_RG8_SNORM, RG16 = GL_RG16, RG16s = GL_RG16_SNORM, RG16f = GL_RG16F, RG32f = GL_RG32F, RGc = GL_COMPRESSED_RG_RGTC2,
			RGB = GL_RGB8, RGBs = GL_RGB8_SNORM, RGB16 = GL_RGB16, RGB16s = GL_RGB16_SNORM, RGB16f = GL_RGB16F, RGB32f = GL_RGB32F, RGBc = GL_COMPRESSED_RGB_S3TC_DXT1_EXT,
			RGBA = GL_RGBA8, RGBAs = GL_RGBA8_SNORM, RGBA16 = GL_RGBA16, RGBA16s = GL_RGBA16_SNORM, RGBA16f = GL_RGBA16F, RGBA32f = GL_RGBA32F, RGBAc = GL_COMPRESSED_RGBA_S3TC_DXT5_EXT,

			Ri = GL_R8I, Ru = GL_R8UI, R16i = GL_R16I, R16u = GL_R16UI, R32i = GL_R32I, R32u = GL_R32UI,
			RGi = GL_RG8I, RGu = GL_RG8UI, RG16i = GL_RG16UI, RG16u = GL_RG16UI, RG32i = GL_RG32I, RG32u = GL_RG32UI,
			RGBi = GL_RGB8I, RGBu = GL_RGB8UI, RGB16i = GL_RGB16UI, RGB16u = GL_RGB16UI, RGB32i = GL_RGB32I, RGB32u = GL_RGB32UI,
			RGBAi = GL_RGBA8I, RGBAu = GL_RGBA8UI, RGBA16i = GL_RGBA16UI, RGBA16u = GL_RGBA16UI, RGBA32i = GL_RGBA32I, RGBA32u = GL_RGBA32UI,

			sRGB = GL_SRGB8, sRGBc = GL_COMPRESSED_SRGB_S3TC_DXT1_EXT, sRGBA = GL_SRGB8_ALPHA8, sRGBAc = GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,

			D16 = GL_DEPTH_COMPONENT16, D24 = GL_DEPTH_COMPONENT24, D32 = GL_DEPTH_COMPONENT32, D32f = GL_DEPTH_COMPONENT32F, 
			D24_S8 = GL_DEPTH24_STENCIL8, D32f_S8 = GL_DEPTH32F_STENCIL8, S8 = GL_STENCIL_INDEX8
		);

		DEnum(OpenGLTextureType, u32, Texture1D = GL_TEXTURE_1D, Texture2D = GL_TEXTURE_2D, Texture3D = GL_TEXTURE_3D);

	}

}