#pragma once
#include "vulkan/vulkan.h"
#include "template/enum.h"
#include "graphics/vkgraphics.h"

namespace oi {

	namespace gc {

		class Texture;

		struct TextureExt {

			typedef Texture BaseType;

			VkImage resource = VK_NULL_HANDLE;
			VkImageView view = VK_NULL_HANDLE;
			VkDeviceMemory memory = VK_NULL_HANDLE;

		};

		DEnum(TextureFormatExt, VkFormat, Undefined = VK_FORMAT_UNDEFINED,

			RGBA8 = VK_FORMAT_R8G8B8A8_UNORM, RGB8 = VK_FORMAT_R8G8B8_UNORM, RG8 = VK_FORMAT_R8G8_UNORM, R8 = VK_FORMAT_R8_UNORM,
			RGBA8s = VK_FORMAT_R8G8B8A8_SNORM, RGB8s = VK_FORMAT_R8G8B8_SNORM, RG8s = VK_FORMAT_R8G8_SNORM, R8s = VK_FORMAT_R8_SNORM,
			RGBA8u = VK_FORMAT_R8G8B8A8_UINT, RGB8u = VK_FORMAT_R8G8B8_UINT, RG8u = VK_FORMAT_R8G8_UINT, R8u = VK_FORMAT_R8_UINT,
			RGBA8i = VK_FORMAT_R8G8B8A8_SINT, RGB8i = VK_FORMAT_R8G8B8_SINT, RG8i = VK_FORMAT_R8G8_SINT, R8i = VK_FORMAT_R8_SINT,

			RGBA16 = VK_FORMAT_R16G16B16A16_UNORM, RGB16 = VK_FORMAT_R16G16B16_UNORM, RG16 = VK_FORMAT_R16G16_UNORM, R16 = VK_FORMAT_R16_UNORM,
			RGBA16s = VK_FORMAT_R16G16B16A16_SNORM, RGB16s = VK_FORMAT_R16G16B16_SNORM, RG16s = VK_FORMAT_R16G16_SNORM, R16s = VK_FORMAT_R16_SNORM,
			RGBA16u = VK_FORMAT_R16G16B16A16_UINT, RGB16u = VK_FORMAT_R16G16B16_UINT, RG16u = VK_FORMAT_R16G16_UINT, R16u = VK_FORMAT_R16_UINT,
			RGBA16i = VK_FORMAT_R16G16B16A16_SINT, RGB16i = VK_FORMAT_R16G16B16_SINT, RG16i = VK_FORMAT_R16G16_SINT, R16i = VK_FORMAT_R16_SINT,
			RGBA16f = VK_FORMAT_R16G16B16A16_SFLOAT, RGB16f = VK_FORMAT_R16G16B16_SFLOAT, RG16f = VK_FORMAT_R16G16_SFLOAT, R16f = VK_FORMAT_R16_SFLOAT,

			RGBA32f = VK_FORMAT_R32G32B32A32_SFLOAT, RGB32f = VK_FORMAT_R32G32B32_SFLOAT, RG32f = VK_FORMAT_R32G32_SFLOAT, R32f = VK_FORMAT_R32_SFLOAT,
			RGBA32u = VK_FORMAT_R32G32B32A32_UINT, RGB32u = VK_FORMAT_R32G32B32_UINT, RG32u = VK_FORMAT_R32G32_UINT, R32u = VK_FORMAT_R32_UINT,
			RGBA32i = VK_FORMAT_R32G32B32A32_SINT, RGB32i = VK_FORMAT_R32G32B32_SINT, RG32i = VK_FORMAT_R32G32_SINT, R32i = VK_FORMAT_R32_SINT,

			RGBA64f = VK_FORMAT_R64G64B64A64_SFLOAT, RGB64f = VK_FORMAT_R64G64B64_SFLOAT, RG64f = VK_FORMAT_R64G64_SFLOAT, R64f = VK_FORMAT_R64_SFLOAT,
			RGBA64u = VK_FORMAT_R64G64B64A64_UINT, RGB64u = VK_FORMAT_R64G64B64_UINT, RG64u = VK_FORMAT_R64G64_UINT, R64u = VK_FORMAT_R64_UINT,
			RGBA64i = VK_FORMAT_R64G64B64A64_SINT, RGB64i = VK_FORMAT_R64G64B64_SINT, RG64i = VK_FORMAT_R64G64_SINT, R64i = VK_FORMAT_R64_SINT,

			D16 = VK_FORMAT_D16_UNORM, D32 = VK_FORMAT_D32_SFLOAT, D16S8 = VK_FORMAT_D16_UNORM_S8_UINT, D24S8 = VK_FORMAT_D24_UNORM_S8_UINT, D32S8 = VK_FORMAT_D32_SFLOAT_S8_UINT,

			sRGBA8 = VK_FORMAT_R8G8B8A8_SRGB, sRGB8 = VK_FORMAT_R8G8B8_SRGB, sRG8 = VK_FORMAT_R8G8_SRGB, sR8 = VK_FORMAT_R8_SRGB,

			BGRA8 = VK_FORMAT_B8G8R8A8_UNORM, BGR8 = VK_FORMAT_B8G8R8_UNORM,
			BGRA8s = VK_FORMAT_B8G8R8A8_SNORM, BGR8s = VK_FORMAT_B8G8R8_SNORM,
			BGRA8u = VK_FORMAT_B8G8R8A8_UINT, BGR8u = VK_FORMAT_B8G8R8_UINT,
			BGRA8i = VK_FORMAT_B8G8R8A8_SINT, BGR8i = VK_FORMAT_B8G8R8_SINT,
			sBGRA8 = VK_FORMAT_B8G8R8A8_SRGB, sBGR8 = VK_FORMAT_B8G8R8_SRGB

		);

		DEnum(TextureUsageExt, VkImageLayout, Undefined = VK_IMAGE_LAYOUT_UNDEFINED,

			Render_target = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,
			Render_depth = VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,
			Compute_target = VK_IMAGE_LAYOUT_GENERAL,
			Image = VK_IMAGE_LAYOUT_UNDEFINED

		);

	}

}